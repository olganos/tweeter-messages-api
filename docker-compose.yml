version: '3.9'

services:

  tweeter-mongodb:
    image: mongo:latest
    container_name: tweeter-mongodb
    restart: always
    volumes:
      - ./mongo/data:/data/db
    ports:
      - 8007:27017

  tweeter-messages-api:
    image: tweeter-messages-api:latest
    restart: always
    depends_on:
      - tweeter-mongodb
      - kafka-server
    build:
      context: ./
      dockerfile: Api/Dockerfile
    ports:
      - 8000:80    
    environment:
      DB_CONNECTION_STRING: mongodb://tweeter-mongodb:27017
      DB_NAME: tweeter-messages
      KAFKA_SERVER: kafka-server:29092
      KAFKA_CREATE_TWEET_TOPIC_NAME: "CreateTweet"
      KAFKA_ADD_REPLY_TOPIC_NAME: "AddReply"
      ASPNETCORE_ENVIRONMENT: Development

  zookeeper-server:
    image: bitnami/zookeeper:latest
    ports:
      - 2181:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - 9000:9000
    environment:
      KAFKA_BROKERCONNECT: PLAINTEXT://kafka-server:29092
      JVM_OPTS: -Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify
      SCHEMAREGISTRY_CONNECT: http://schema-registry:8081
    depends_on:
      - kafka-server

  kafka-server:
    image: bitnami/kafka:latest
    ports:
      - 9092:9092
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper-server:2181
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-server:29092,PLAINTEXT_HOST://127.0.0.1:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:29092,PLAINTEXT_HOST://:9092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper-server

  # This container is used for creating new topics during all the containers start
  init-kafka:
    image: bitnami/kafka:latest
    depends_on:
      - kafka-server
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics.sh --bootstrap-server kafka-server:29092 --list

      echo -e 'Creating kafka topics'
      kafka-topics.sh --bootstrap-server kafka-server:29092 --create --if-not-exists --topic CreateTweet --replication-factor 1 --partitions 1
      kafka-topics.sh --bootstrap-server kafka-server:29092 --create --if-not-exists --topic AddReply --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics.sh --bootstrap-server kafka-server:29092 --list
      "

  # todo: I copied it from an example and I leaved it just because I was afraid to delete
  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    ports:
      - 8081:8081
    environment:
      - SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS=PLAINTEXT://kafka-server:29092
      - SCHEMA_REGISTRY_HOST_NAME=localhost
      - SCHEMA_REGISTRY_LISTENERS=http://0.0.0.0:8081
    depends_on:
      - kafka-server      